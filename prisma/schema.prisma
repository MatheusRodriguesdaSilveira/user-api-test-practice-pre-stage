// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  services   Service[]

  @@map("categories")
}

model Service {
  id          String    @id @default(uuid())
  name        String
  description String
  image       String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  items       Item[]

  @@map("services")
}

model Appointment {
  id               String    @id @default(uuid())
  client_name      String
  client_phone     String?
  appointment_date DateTime
  status           Boolean   @default(false)
  draft            Boolean   @default(true)
  name             String?
  created_at       DateTime? @default(now())
  updated_at       DateTime? @default(now())
  items            Item[]

  @@map("appointments")
}

model Item {
  id             String       @id @default(uuid())
  amount         Int
  created_at     DateTime?    @default(now())
  updated_at     DateTime?    @default(now())
  appointment    Appointment? @relation(fields: [appointment_id], references: [id])
  service        Service      @relation(fields: [service_id], references: [id])
  appointment_id String?
  service_id     String

  @@map("items")
}
